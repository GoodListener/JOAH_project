<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitproject.pms.dao.MemberDao">
	
	<resultMap type="member" id="memberMap">
      <id 		column="id" 		property="id"/>
      <result 	column="int_code" 	property="intCode"/>
      <result 	column="pwd" 		property="password"/>
  	</resultMap>
	
	<select id="idList" resultType="member">
    select id
    from member
  </select>
  
  <select id="selectList" resultType="member" parameterType="map">
    select 
   	  id,
   	  email,
   	  gender,
   	  age,
   	  name,
   	  photo,
   	  cid
    from member
  	<choose>
	 <when test="search == 'name'"> where id!='admin'and (name like concat('%',#{word},'%')) </when>
	 <when test="search == 'id'"> where id!='admin' and (id like concat('%',#{word},'%')) </when>
	 <when test="search == 'all'">
	 	where id!='admin' and (id like concat('%',#{word},'%')) or (name like concat('%',#{word},'%'))
	 </when>
	 </choose>
    order by
	<choose>
      <when test="keyword == 'id'"> id </when>
    </choose>
    <choose>
      <when test="align == 'desc'">desc</when>
      <otherwise>asc</otherwise>
    </choose>
		limit #{startIndex}, #{length}
	</select>
	
	<insert id="insert" parameterType="member">
		insert into member(id,pwd,name,email,gender,age,cid,photo)
		values(#{id},sha1(#{password}),#{name},#{email},#{gender},#{age},#{cid},#{photo})
	</insert>


	<update id="updateinfo" parameterType="member">
		update member set
		  name=#{name},		
		  email=#{email},
		  age=#{age}
<!-- 		  ,photo=#{photo} -->
		where id=#{id}  
 		<!-- 처음에 password 먼저 확인하고 나중에 변경할 땐 그냥 ok 하도록--> 
	</update>
	
	<update id="updatepwd" parameterType="map">
		update member set
	      pwd=sha1(#{newPassword})	
		where id=#{id} and pwd=sha1(#{password})
	</update>
	
	<select id="selectOne" resultType="member" parameterType="string">
		select id,pwd,name,email,gender,age,cid,photo
		from member
		where id=#{id}
	</select>
	
	<select id="login" resultType="member" parameterType="map">
		select id,name,email,gender,age,cid
		from member
		where id=#{id} and pwd=sha1(#{password}) and secession='1'
	</select> 
	
	<delete id="deletemember" parameterType="map">
	 	delete from member
	 	where id=#{id} and pwd=sha1(#{password})	
	</delete>
	
	<delete id="deleteAdmin" parameterType="string">
	 	delete from member
	 	where id=#{id}	
	</delete>
	
	<update id="secession" parameterType="map">
		update member set
	      secession='0'
		where id=#{id} and pwd=sha1(#{password})
	</update>
</mapper> 





